" making iMproved

set nocompatible

" use the system clipboard:
" use :reg to check registers - "3p to paste 3rd stuff
set clipboard^=unnamed,unnamedplus
set encoding=utf-8

" ***********************
" PLUGIN MANAGER
" ***********************
" This plugin manager automatically calls
" filetype plugin indent on, syntax enable

call plug#begin('~/.vim/plugged')
" Make sure you use single quotes

Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'tomasiser/vim-code-dark'
Plug 'tomasr/molokai'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'editorconfig/editorconfig-vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'elzr/vim-json'
Plug 'pangloss/vim-javascript'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mattn/emmet-vim'
" "Plug 'prettier/vim-prettier', { 'do': 'npm install' }
" "Plug 'dense-analysis/ale'
" Plug 'junegunn/fzf', { 'do': './install --no-zsh --no-fish --no-bash' }

" Initialize plugin system
call plug#end()


filetype plugin indent on	      " activates filetype detection
syntax enable			              " activates syntax highlighting among other things
set backspace=indent,eol,start	" backspace to work normal

set t_Co=256
" set t_ut=

set tabstop=4			          " show existing tab with 4 spaces width
set shiftwidth=4		        " when indenting with '>', use 4 spaces width
set expandtab			          " On pressing tab, insert 4 spaces

" set hidden                 " Switch between buffers without having to save first.
set splitbelow             " Open new windows below the current window.
set splitright             " Open new windows right of the current window.

" set backup directory
set backupdir=~/.vim/tmp/backup//       " to store all backup files in one place
set directory=~/.vim/tmp/swp//          " to store all swp files in one place
set undodir=~/.vim/tmp/undodir//        " to store all undofiles in one place


" **************
" EDITOR THEMES
" **************

" set termguicolors
" colorscheme molokai		      " editor theme molokai
" let g:molokai_original = 1	" activating the molokai original bg

colorscheme codedark
let g:airline_theme = 'codedark'

" **********************
" VIM-AIRLINE - TABLINE
" **********************

let g:airline#extensions#tabline#enabled = 1			" enable the tabline
let g:airline#extensions#branch#enabled=1			" enable git branch
let g:airline#extensions#tabline#formatter = 'unique_tail' 	" remove the paths in the in the file
let g:airline#extensions#tabline#tabs_label = ''       		" hide label tabs in the right
let g:airline#extensions#tabline#buffers_label = ''		" hide label buffers in the right
let g:airline#extensions#tabline#fnamemod = ':t'		" disable file paths in the tab
let g:airline#extensions#tabline#show_splits = 0		" disable buffer name on the right
let g:airline#extensions#tabline#show_tab_nr = 0		" disable tab numbers
let g:airline#extensions#tabline#show_tab_type = 0		" disables the weird pipe symbol at the left
" let g:airline#extensions#tabline#show_close_button = 'X'	" remove 'X' at the end of the tabline
" let g:airline#extensions#tabline#show_tab_count = 0		" dont show tab numbers on the right
let g:airline#extensions#tabline#show_buffers = 0		" dont show buffers in the tabline
" let g:airline#extensions#tabline#tab_min_count = 2		" minimum of 2 tabs needed to display the tabline


" **************
" EDITOR CONFIG
" **************

let g:EditorConfig_exclude_patterns = ['fugitive://.\*', 'scp://.\*']
" let g:EditorConfig_disable_rules = ['trim_trailing_whitespace']


" **********
" Nerd Tree
" **********

let NERDTreeShowHidden=1

" **********
" Vim Json
" **********
                " Disabling double quotes
let g:vim_json_syntax_conceal = 0

" *****
" CtrlP
" *****
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
let g:ctrlp_dotfiles = 1
"let g:ctrlp_prompt_mappings = {
"      \ 'AcceptSelection("e")': ['<2-LeftMouse>'],
"      \ 'AcceptSelection("t")': ['<cr>'],
"      \ }

" To sync ctrlp with nerdtree
let g:NERDTreeChDirMode       = 2
" "let g:ctrlp_working_path_mode = 'rw'

" *********
" Prettier
" *********

" let g:prettier#autoformat_config_present = 1
" "let g:prettier#config#print_width = '120'
" autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.yaml,*.html PrettierAsync


" *********
" Emmet
" *********

let g:user_emmet_leader_key='<C-Z>'

" *********
" Ale lint
" *********

"let b:ale_linters = {'javascript': ['eslint']}
"
"let g:ale_fix_on_save = 1
"
"let g:airline#extensions#ale#enabled = 1
"
"let g:ale_list_window_size = 5

" **************
" GENERAL CONFIG
" **************

" set mouse=a             " turn on mouse scroll
set number			    " show line numbers
set relativenumber		" turn on relative number
set wildmenu			" visual autocomplete for command menu
set cursorline			" highlight current line
set showmatch			" highlight matching [{()}]
set incsearch			" search as characters are entered
set hlsearch			" highlight matches
set foldenable			" enable folding
set foldmethod=manual   " fold based on the indentation zfat - to fold, za - to open a fold
set nofoldenable		" close all fold levels by default
set autoindent
set omnifunc=syntaxcomplete#Complete
set nowrap
set undofile            " Maintain undo history between sessions


" ***************************
" LEADER KEY AND ITS MAPPING
" ***************************
let mapleader=","
let maplocalleader="\<space>"

" nerd tree toggler
map <silent> <leader>n :NERDTreeToggle<CR>
" relative number toggler
map <silent> <leader>r :set relativenumber!<CR>
" word wrap toggle
map <silent> <leader>w :set wrap!<CR>
" Open terminal
map <silent> <leader>t :terminal<CR>
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
" open loaded vimrc in newtab
map <leader>v :tabnew $MYVIMRC<CR>
map <leader>so :source $MYVIMRC<CR>
" cycle through tabs
" nnoremap <C-j> :tabprevious<CR>
" nnoremap <C-k> :tabnext<CR>
" move btw windows easily
noremap <C-J> <C-W>w
noremap <C-K> <C-W>W
noremap <C-L> <C-W>l
noremap <C-H> <C-W>h
" Resize windows with the arrow keys
nnoremap <up> 10<C-W>+
nnoremap <down> 10<C-W>-
nnoremap <left> 3<C-W>>
nnoremap <right> 3<C-W><
" fold toggler
nnoremap <leader>f za
" save session to reopen with vim -S
nnoremap <leader>se :mksession<CR>
" fzf fuzzy finder mapping
" nnoremap <silent> <leader>s :FZF<CR>
" faster scroll
nnoremap <C-e> 5<C-e>
nnoremap <C-y> 5<C-y>


" Todo handler mapping
" start a task
nnoremap <leader>s dd<c-w><c-w>p^r~: <Esc>:r! date +" @started[\%d-\%m-\%Y \%H:\%M]"<ENTER>kJA<Esc>$
" finish a task
nnoremap <leader>c dd<c-w><c-w>p^rx: <Esc>:r! date +" @done[\%H:\%M:\%S]"<ENTER>kJA<Esc>$

" autosoure vimrc - messing up colorscheme
" autocmd! bufwritepost $MYVIMRC source $MYVIMRC

" auto close pairs
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O
